{
  
    
        "post0": {
            "title": "Projeção do Covid-19 no Brasil",
            "content": "Gr&#225;ficos . Proje&#231;&#227;o do n&#250;mero de casos no Brasil para a pr&#243;xima semana . #hideinput from PIL import Image Image.open(&#39;projecao_exponencial_casos_7_dias.png&#39;) . Proje&#231;&#227;o do n&#250;mero de &#243;bitos no Brasil para a pr&#243;xima semana . #hideinput from PIL import Image Image.open(&#39;projecao_exponencial_obitos_7_dias.png&#39;) . N&#250;mero de Casos Novos Confirmados . #hideinput from PIL import Image Image.open(&#39;casos_novos.png&#39;) . N&#250;meros de &#211;bitos Novos . #hideinput from PIL import Image Image.open(&#39;obitos_novos.png&#39;) . Grade de Gr&#225;ficos: Casos Acumulados vs Casos Novos vs &#211;bitos Acumulados vs &#211;bitos Novos . #hideinput from PIL import Image Image.open(&#39;scatter_matrix_primeiro_obito.png&#39;) . C&#243;digo para gera&#231;&#227;o do resumo . Neste relatório vamos desenvolver em Python uma projeção que pode ser atualizada em tempo real do número de casos de Covid-19 no Brasil. Devido à sua natureza com crescimento exponencial, podemos fazer projeções de curto/médio prazo de acordo com tal tendência. É importante salientar que não existe nenhuma exponencial pura. Em algum momento haverá um ponto de inflexão (quando o número de casos começa a diminuir) e esta exponencial se tornará um sigmóide (como já é o caso da China). Portanto, como não há como prever quando ocorrerá essa inflexão, as projeções somente são úteis para curto e médio prazo. A metodologia será bastante simples: uma regressão linear será ajustada ao log dos casos. Será incluido também o desvio padrão para termos um intervalo de tal projeção. Sem mais delongas, vamos começar! Primeiramente, todas as importações que serão utilizadas: . # Todas as importações vem aqui import numpy as np import pandas as pd import matplotlib.pyplot as plt import seaborn as sns from sklearn.linear_model import LinearRegression from datetime import date . E também parâmetros: . FIGSIZE = (12,6) . Em seguida, vamos importar a base de dados disponibilizada pelo repositório da John Hopkins University. Há duas bases relevantes para nosso caso, uma com o histórico do número de casos e outro com o histório do número de mortes (ambos obtido a partir dos relatórios diários da OMS). . CASOS_URL = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&#39; MORTES_URL = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv&#39; . Ambos são urls diretas para arquivos .CSV, portanto podemos importá-los diretamente para a biblioteca Pandas do Python, sem precisar baixá-los: . casos = pd.read_csv(CASOS_URL) mortes = pd.read_csv(MORTES_URL) . Vamos visualizar o cabeçalho de cada um: . casos.head() . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 1/28/20 1/29/20 1/30/20 1/31/20 2/1/20 2/2/20 2/3/20 2/4/20 2/5/20 2/6/20 2/7/20 2/8/20 2/9/20 2/10/20 2/11/20 2/12/20 2/13/20 2/14/20 2/15/20 2/16/20 2/17/20 2/18/20 2/19/20 2/20/20 2/21/20 2/22/20 2/23/20 2/24/20 2/25/20 2/26/20 2/27/20 2/28/20 2/29/20 3/1/20 3/2/20 3/3/20 3/4/20 3/5/20 3/6/20 3/7/20 3/8/20 3/9/20 3/10/20 3/11/20 3/12/20 3/13/20 3/14/20 3/15/20 3/16/20 3/17/20 3/18/20 3/19/20 3/20/20 3/21/20 3/22/20 3/23/20 3/24/20 3/25/20 3/26/20 3/27/20 3/28/20 3/29/20 3/30/20 3/31/20 . 0 NaN | Afghanistan | 33.0000 | 65.0000 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 4 | 4 | 5 | 7 | 7 | 7 | 11 | 16 | 21 | 22 | 22 | 22 | 24 | 24 | 40 | 40 | 74 | 84 | 94 | 110 | 110 | 120 | 170 | 174 | . 1 NaN | Albania | 41.1533 | 20.1683 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 2 | 10 | 12 | 23 | 33 | 38 | 42 | 51 | 55 | 59 | 64 | 70 | 76 | 89 | 104 | 123 | 146 | 174 | 186 | 197 | 212 | 223 | 243 | . 2 NaN | Algeria | 28.0339 | 1.6596 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 3 | 5 | 12 | 12 | 17 | 17 | 19 | 20 | 20 | 20 | 24 | 26 | 37 | 48 | 54 | 60 | 74 | 87 | 90 | 139 | 201 | 230 | 264 | 302 | 367 | 409 | 454 | 511 | 584 | 716 | . 3 NaN | Andorra | 42.5063 | 1.5218 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2 | 39 | 39 | 53 | 75 | 88 | 113 | 133 | 164 | 188 | 224 | 267 | 308 | 334 | 370 | 376 | . 4 NaN | Angola | -11.2027 | 17.8739 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 2 | 2 | 3 | 3 | 3 | 4 | 4 | 5 | 7 | 7 | 7 | . mortes.head() . Province/State Country/Region Lat Long 1/22/20 1/23/20 1/24/20 1/25/20 1/26/20 1/27/20 1/28/20 1/29/20 1/30/20 1/31/20 2/1/20 2/2/20 2/3/20 2/4/20 2/5/20 2/6/20 2/7/20 2/8/20 2/9/20 2/10/20 2/11/20 2/12/20 2/13/20 2/14/20 2/15/20 2/16/20 2/17/20 2/18/20 2/19/20 2/20/20 2/21/20 2/22/20 2/23/20 2/24/20 2/25/20 2/26/20 2/27/20 2/28/20 2/29/20 3/1/20 3/2/20 3/3/20 3/4/20 3/5/20 3/6/20 3/7/20 3/8/20 3/9/20 3/10/20 3/11/20 3/12/20 3/13/20 3/14/20 3/15/20 3/16/20 3/17/20 3/18/20 3/19/20 3/20/20 3/21/20 3/22/20 3/23/20 3/24/20 3/25/20 3/26/20 3/27/20 3/28/20 3/29/20 3/30/20 3/31/20 . 0 NaN | Afghanistan | 33.0000 | 65.0000 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 2 | 4 | 4 | 4 | 4 | 4 | 4 | . 1 NaN | Albania | 41.1533 | 20.1683 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 2 | 2 | 2 | 2 | 2 | 4 | 5 | 5 | 6 | 8 | 10 | 10 | 11 | 15 | . 2 NaN | Algeria | 28.0339 | 1.6596 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 2 | 3 | 4 | 4 | 4 | 7 | 9 | 11 | 15 | 17 | 17 | 19 | 21 | 25 | 26 | 29 | 31 | 35 | 44 | . 3 NaN | Andorra | 42.5063 | 1.5218 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 3 | 3 | 3 | 6 | 8 | 12 | . 4 NaN | Angola | -11.2027 | 17.8739 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 2 | 2 | 2 | . Como para este relatório temos interesse em apenas dados do Brasil, vamos atribuir duas novas variáveis à ambos: . def filter_country(df, country): # Filtrar pais df = df[df[&#39;Country/Region&#39;]==country] # Remover colunas iniciais, manter somente as datas df = df.iloc[:, 4:] # Transpor df = df.T # Redefinir coluna df.columns = [country] # Definir index para Datetime df.index = pd.to_datetime(df.index) return df casos_brasil = filter_country(casos, &#39;Brazil&#39;) mortes_brasil = filter_country(mortes, &#39;Brazil&#39;) . Vamos ver como ficaram os novos dataframes: . casos_brasil.tail() . Brazil . 2020-03-27 3417 | . 2020-03-28 3904 | . 2020-03-29 4256 | . 2020-03-30 4579 | . 2020-03-31 5717 | . mortes_brasil.tail() . Brazil . 2020-03-27 92 | . 2020-03-28 111 | . 2020-03-29 136 | . 2020-03-30 159 | . 2020-03-31 201 | . Podemos facilmente também plotar tais dados para ver como estão: . casos_brasil.plot(title=&#39;Número de casos&#39;); . mortes_brasil.plot(title=&#39;Número de mortes&#39;); . Podemos conferir se o número de casos está se acelerando ou não plotando um gráfico de barras do número de casos por dia. Isso será importante para identificar a inflexão! . casos_novos_brasil = casos_brasil[1:]-casos_brasil[:-1].values casos_novos_brasil.tail() . Brazil . 2020-03-27 432 | . 2020-03-28 487 | . 2020-03-29 352 | . 2020-03-30 323 | . 2020-03-31 1138 | . mortes_novas_brasil = mortes_brasil[1:]-mortes_brasil[:-1].values mortes_novas_brasil.tail() . Brazil . 2020-03-27 15 | . 2020-03-28 19 | . 2020-03-29 25 | . 2020-03-30 23 | . 2020-03-31 42 | . Em seguida vamos visualizar ambos em um gráfico de barras: . # Funcao personalizada def plot_bar_novos(df, title): df.index = df.index.strftime(&#39;%d/%m&#39;)#astype(&#39;str&#39;) ax = df.plot.bar( title=title, figsize=FIGSIZE ) _=plt.xticks(rotation=50) return ax . primeiro_caso_filtro = casos_novos_brasil.values&gt;0 ax=plot_bar_novos(casos_novos_brasil[primeiro_caso_filtro], title=&#39;Casos novos (sem acumular, a partir do primeiro caso)&#39;, ) . # Filtrar a partir do primeiro obito primeiro_obito_filtro = mortes_novas_brasil.values&gt;0 # Criar plot ax=plot_bar_novos(mortes_novas_brasil[primeiro_obito_filtro], title=&#39;Óbitos novos (sem acumular, a partir do primeiro óbito)&#39; ) . ax.figure.savefig(&#39;obitos_novos.png&#39;) . Portanto, podemos observar que apesar de o número novos de casos aparentemente estar se achatando, os números novos de mortes continuam com tendência exponencial, portanto, o achatamento pode ser por limitação de testes. Veremos como serão as próximas semanas com a possível aplicagem de testes em massa. . Vamos agora dar início à modelagem das projeções. Primeiramente, vamos fazer alguns plots em cima do log dos dados: . casos_brasil[&#39;Brazil&#39;].apply(np.log).plot(marker=&#39;o&#39;, linestyle=&#39;&#39;, title=&#39;Log do Número de casos&#39;); . mortes_brasil[&#39;Brazil&#39;].apply(np.log).plot(marker=&#39;o&#39;, linestyle=&#39;&#39;, title=&#39;Log do Número de Mortes&#39;); . casos_novos_brasil.apply(np.log).plot(marker=&#39;o&#39;, linestyle=&#39;&#39;, title=&#39;Log do número de casos novos&#39;); . mortes_novas_brasil.apply(np.log).plot(marker=&#39;o&#39;, linestyle=&#39;&#39;, title=&#39;Log de novas mortes&#39;); . Todas as curvas acima não representam uma reta perfeita, o que são ótimas notícias: Significa que talvez não esteja mais seguindo uma tendência exponencial. De qualquer forma, vou usar como ponto de partida uma regressão linear, apesar de haverem ressalvas sobre o uso dela. Por simplificação, vou começar com uma projeção do número total de casos e de mortes. Primeiramente, vou juntar todos os dados em um único dataframe: . brasil = pd.DataFrame({ &#39;Confirmados Cumulativo&#39;: casos_brasil[&#39;Brazil&#39;].values[1:], &#39;Confirmados Novos&#39;: casos_novos_brasil[&#39;Brazil&#39;].values, &#39;Mortes Cumulativa&#39;: mortes_brasil[&#39;Brazil&#39;].values[1:], &#39;Mortes Novas&#39;: mortes_novas_brasil[&#39;Brazil&#39;].values }) brasil.index = casos_novos_brasil.index brasil.tail() . Confirmados Cumulativo Confirmados Novos Mortes Cumulativa Mortes Novas . 2020-03-27 3417 | 432 | 92 | 15 | . 2020-03-28 3904 | 487 | 111 | 19 | . 2020-03-29 4256 | 352 | 136 | 25 | . 2020-03-30 4579 | 323 | 159 | 23 | . 2020-03-31 5717 | 1138 | 201 | 42 | . Também podemos criar um dataframe com o log de todos os dados: . brasil_log = brasil.apply(np.log1p) brasil_log.tail() . Confirmados Cumulativo Confirmados Novos Mortes Cumulativa Mortes Novas . 2020-03-27 8.136811 | 6.070738 | 4.532599 | 2.772589 | . 2020-03-28 8.270013 | 6.190315 | 4.718499 | 2.995732 | . 2020-03-29 8.356320 | 5.866468 | 4.919981 | 3.258097 | . 2020-03-30 8.429454 | 5.780744 | 5.075174 | 3.178054 | . 2020-03-31 8.651374 | 7.037906 | 5.308268 | 3.761200 | . Vamos visualizar a distribuição de cada um e também scatter plots de cada um versus o outro: . pd.plotting.scatter_matrix(brasil_log, figsize = (14,8), diagonal = &#39;kde&#39;); . O plot acima fica um pouco enviesado pois há um grande acúmulo de zeros. Vamos filtrar as datas a partir do promeiro óbito: . primeiro_obito = brasil_log.index[brasil_log[&#39;Mortes Cumulativa&#39;]&gt;0][0] primeiro_obito_filtro = brasil_log.index&gt;=primeiro_obito primeiro_obito . Timestamp(&#39;2020-03-17 00:00:00&#39;) . Como é uma base bastante recente, vamos também pegar o primeiro caso: . primeiro_caso = brasil_log.index[brasil_log[&#39;Confirmados Cumulativo&#39;]&gt;0][0] primeiro_caso_filtro = brasil_log.index&gt;=primeiro_caso primeiro_caso . Timestamp(&#39;2020-02-26 00:00:00&#39;) . Vamos repetir o scatter matrix acima a partir dos filtros que definimos: . g = sns.pairplot(brasil[primeiro_obito_filtro], kind=&quot;reg&quot;) g.fig.tight_layout() g.fig.subplots_adjust(top=0.88) g.fig.suptitle(&#39;Grade de gráficos, dados a partir do primeiro óbito&#39;, y=0.92); . g = sns.pairplot(brasil[primeiro_caso_filtro], kind=&quot;reg&quot;) g.fig.suptitle(&#39;Scatter Matrix com filtro a partir do primeiro caso&#39;, y=1.08); . g = sns.pairplot(brasil_log[primeiro_obito_filtro], kind=&quot;reg&quot;) g.fig.suptitle(&#39;Scatter Matrix do Log dos dados com filtro a partir do primeiro óbito&#39;, y=1.08); . g = sns.pairplot(brasil_log[primeiro_obito_filtro], kind=&quot;reg&quot;) g.fig.suptitle(&#39;Scatter Matrix do Log dos dados com filtro a partir do primeiro óbito&#39;, y=1.08); . Os plots acima, talvez pareçam informação irrelevante, mas o fiz para ter uma ideia sobre a distribuição dos dados e se há alguma distribuição normal em algum caso, que justificaria o uso do desvio padrão (uma vez que o mesmo é em relação à distribuição normal). De qualquer forma, para manter as coisas simples inicialmente, vou manter meu plano inicial de criar uma projeção do número de casos incluindo o intervalo do desvio padrão. Então vamos começar pegando o as estatísticas filtrando a partir do primeiro caso: . std = brasil_log[primeiro_caso_filtro].std() . Visualizar um plot da tendência que vamos modelar: . brasil_log[primeiro_caso_filtro][&#39;Confirmados Cumulativo&#39;].plot() . &lt;matplotlib.axes._subplots.AxesSubplot at 0x7fa33374f7f0&gt; . Em seguida ajustar uma regressão linear em cima do log: . def fitar(x, y): lr = LinearRegression() lr.fit(x,y) return lr x = np.arange(sum(primeiro_caso_filtro)).reshape(-1,1) y = brasil_log[primeiro_caso_filtro][&#39;Confirmados Cumulativo&#39;].values lr_casos = fitar(x, y) . def projetar(lr, x, y, plot=True): y_pred = lr.predict(x) if plot: plt.scatter(x, y) plt.plot(y_pred, &#39;r&#39;) plt.title(&quot;Projeção logarítmica&quot;) plt.show() plt.scatter(x, np.expm1(y)) plt.plot(np.expm1(y_pred), &#39;r&#39;) plt.title(&quot;Projeção exponencial&quot;) plt.show() return y_pred y_pred = projetar(lr_casos, x, y) . A projeção acima não ficou boa, vamos testar suavizar com um exponential moving average: . def generate_moving_average(data, mom=0.7): MOM = 0.7 rolling_mean = [data[0]] for d in data[1:]: rolling_mean.append(rolling_mean[-1]*MOM + (1-MOM)*d) return np.array(rolling_mean) def fitar_projetar(x, y, mom=None): if mom is not None: y_old = y y = generate_moving_average(y) lr = fitar(x, y) y_pred = projetar(lr, x, y, plot=not mom) # Plota se mom for nulo if mom is not None: y_pred_exp = np.expm1(y_pred) reversed_mv = [(rm-rm_*mom)/(1-mom) for rm, rm_ in zip(y_pred_exp[1:], y_pred_exp[:-1])] plt.scatter(x, np.expm1(y_old), label=&quot;Original&quot;) plt.scatter(x, np.expm1(y), label=&quot;Exp. Moving Average&quot;) plt.plot(y_pred_exp, &#39;r&#39;, label=&quot;Projeção do EMA&quot;) plt.plot(reversed_mv, label=&quot;EMA reverso para projeção real&quot;) plt.legend() plt.title(f&quot;Projeção com Exp. Moving Average (momentum = {mom})&quot;) plt.show() return y_pred y_pred = fitar_projetar(x, y, mom=0.5) . Também não ficou muito boa. Um dos motivos de estas funções não estarem se saindo bem é que o erro está sendo inferido na escala logarítmica, ou seja, enquanto estamos na escala logarítmica, o erro em termos absolutos é pequeno, no entanto, quando passamos à escala normal, o erro aumenta consideravelmente. Parra corrigir isso, precisamos ajustar uma função exponencial diretamente sem realizar a transformação logarítmica. Precisamos de uma função de custo que infira o erro diretamente da exponencial. Podemos fazer isso com o auxílio de otimizadores de redes neurais. Vamos também aproveitar para ajustar uma sigmóide. E aqui um detalhe: para quem é de machine learning, as boas práticas de seleção de modelos não se aplicam aqui (por exemplo, divisão treinamento e teste). Como os modelos a serem ajustados são bastante simples, não há a necessidade de reservar um conjunto de validação/teste. . # Creating a model from keras.models import Sequential from keras.layers import Dense from keras import backend as K from keras.optimizers import Adam from keras.activations import sigmoid, elu def get_keras_model(lr=0.001, activation=&#39;exp&#39;): if activation==&#39;exp&#39;: def activ_func(x): return K.exp(x) - 1 elif activation==&#39;sigm&#39;: activ_func = sigmoid elif activation==&#39;elu&#39;: activ_func = elu # Usage model = Sequential() model.add(Dense(1, input_dim=1, activation=activ_func)) model.compile(optimizer=Adam(lr=lr), loss=&#39;mean_squared_error&#39;) return model . # Definir entrada e saida x = np.arange(sum(primeiro_caso_filtro)).reshape(-1,1) y = brasil[primeiro_caso_filtro][&#39;Confirmados Cumulativo&#39;].values . # Preparar dados def preparar_dados(x, y): x_mean = x.mean() x_std = x.std() y_mean = y.mean() y_std = y.std() x_prep = (x-x_mean)/x_std y_prep = (y-y_mean)/y_std return x_prep, y_prep x_prep, y_prep = preparar_dados(x, y) . #hide_output model = get_keras_model(lr=0.1) model.fit(x_prep, y_prep, epochs=100) . Epoch 1/100 35/35 [==============================] - 0s 1ms/step - loss: 1.6505 Epoch 2/100 35/35 [==============================] - 0s 104us/step - loss: 1.2893 Epoch 3/100 35/35 [==============================] - 0s 98us/step - loss: 1.0423 Epoch 4/100 35/35 [==============================] - 0s 116us/step - loss: 0.8631 Epoch 5/100 35/35 [==============================] - 0s 104us/step - loss: 0.6884 Epoch 6/100 35/35 [==============================] - 0s 119us/step - loss: 0.4985 Epoch 7/100 35/35 [==============================] - 0s 98us/step - loss: 0.3030 Epoch 8/100 35/35 [==============================] - 0s 107us/step - loss: 0.1393 Epoch 9/100 35/35 [==============================] - 0s 116us/step - loss: 0.0747 Epoch 10/100 35/35 [==============================] - 0s 99us/step - loss: 0.1330 Epoch 11/100 35/35 [==============================] - 0s 104us/step - loss: 0.1328 Epoch 12/100 35/35 [==============================] - 0s 104us/step - loss: 0.0627 Epoch 13/100 35/35 [==============================] - 0s 104us/step - loss: 0.0362 Epoch 14/100 35/35 [==============================] - 0s 111us/step - loss: 0.0357 Epoch 15/100 35/35 [==============================] - 0s 104us/step - loss: 0.0330 Epoch 16/100 35/35 [==============================] - 0s 99us/step - loss: 0.0278 Epoch 17/100 35/35 [==============================] - 0s 99us/step - loss: 0.0247 Epoch 18/100 35/35 [==============================] - 0s 336us/step - loss: 0.0264 Epoch 19/100 35/35 [==============================] - 0s 115us/step - loss: 0.0277 Epoch 20/100 35/35 [==============================] - 0s 105us/step - loss: 0.0255 Epoch 21/100 35/35 [==============================] - 0s 104us/step - loss: 0.0263 Epoch 22/100 35/35 [==============================] - 0s 116us/step - loss: 0.0302 Epoch 23/100 35/35 [==============================] - 0s 135us/step - loss: 0.0317 Epoch 24/100 35/35 [==============================] - 0s 99us/step - loss: 0.0294 Epoch 25/100 35/35 [==============================] - 0s 126us/step - loss: 0.0261 Epoch 26/100 35/35 [==============================] - 0s 126us/step - loss: 0.0322 Epoch 27/100 35/35 [==============================] - 0s 134us/step - loss: 0.0300 Epoch 28/100 35/35 [==============================] - 0s 145us/step - loss: 0.0270 Epoch 29/100 35/35 [==============================] - 0s 125us/step - loss: 0.0316 Epoch 30/100 35/35 [==============================] - 0s 133us/step - loss: 0.0311 Epoch 31/100 35/35 [==============================] - 0s 123us/step - loss: 0.0268 Epoch 32/100 35/35 [==============================] - 0s 111us/step - loss: 0.0261 Epoch 33/100 35/35 [==============================] - 0s 109us/step - loss: 0.0292 Epoch 34/100 35/35 [==============================] - 0s 108us/step - loss: 0.0260 Epoch 35/100 35/35 [==============================] - 0s 149us/step - loss: 0.0345 Epoch 36/100 35/35 [==============================] - 0s 143us/step - loss: 0.0338 Epoch 37/100 35/35 [==============================] - 0s 150us/step - loss: 0.0258 Epoch 38/100 35/35 [==============================] - 0s 134us/step - loss: 0.0272 Epoch 39/100 35/35 [==============================] - 0s 155us/step - loss: 0.0315 Epoch 40/100 35/35 [==============================] - 0s 152us/step - loss: 0.0291 Epoch 41/100 35/35 [==============================] - 0s 117us/step - loss: 0.0247 Epoch 42/100 35/35 [==============================] - 0s 148us/step - loss: 0.0297 Epoch 43/100 35/35 [==============================] - 0s 149us/step - loss: 0.0335 Epoch 44/100 35/35 [==============================] - 0s 126us/step - loss: 0.0281 Epoch 45/100 35/35 [==============================] - 0s 161us/step - loss: 0.0250 Epoch 46/100 35/35 [==============================] - 0s 147us/step - loss: 0.0273 Epoch 47/100 35/35 [==============================] - 0s 127us/step - loss: 0.0261 Epoch 48/100 35/35 [==============================] - 0s 129us/step - loss: 0.0246 Epoch 49/100 35/35 [==============================] - 0s 138us/step - loss: 0.0249 Epoch 50/100 35/35 [==============================] - 0s 107us/step - loss: 0.0253 Epoch 51/100 35/35 [==============================] - 0s 112us/step - loss: 0.0257 Epoch 52/100 35/35 [==============================] - 0s 144us/step - loss: 0.0246 Epoch 53/100 35/35 [==============================] - 0s 152us/step - loss: 0.0279 Epoch 54/100 35/35 [==============================] - 0s 141us/step - loss: 0.0301 Epoch 55/100 35/35 [==============================] - 0s 146us/step - loss: 0.0270 Epoch 56/100 35/35 [==============================] - 0s 123us/step - loss: 0.0246 Epoch 57/100 35/35 [==============================] - 0s 151us/step - loss: 0.0270 Epoch 58/100 35/35 [==============================] - 0s 125us/step - loss: 0.0251 Epoch 59/100 35/35 [==============================] - 0s 132us/step - loss: 0.0281 Epoch 60/100 35/35 [==============================] - 0s 109us/step - loss: 0.0293 Epoch 61/100 35/35 [==============================] - 0s 99us/step - loss: 0.0251 Epoch 62/100 35/35 [==============================] - 0s 116us/step - loss: 0.0267 Epoch 63/100 35/35 [==============================] - 0s 143us/step - loss: 0.0263 Epoch 64/100 35/35 [==============================] - 0s 130us/step - loss: 0.0257 Epoch 65/100 35/35 [==============================] - 0s 132us/step - loss: 0.0337 Epoch 66/100 35/35 [==============================] - 0s 115us/step - loss: 0.0309 Epoch 67/100 35/35 [==============================] - 0s 105us/step - loss: 0.0250 Epoch 68/100 35/35 [==============================] - 0s 128us/step - loss: 0.0291 Epoch 69/100 35/35 [==============================] - 0s 102us/step - loss: 0.0331 Epoch 70/100 35/35 [==============================] - 0s 124us/step - loss: 0.0289 Epoch 71/100 35/35 [==============================] - 0s 277us/step - loss: 0.0278 Epoch 72/100 35/35 [==============================] - 0s 143us/step - loss: 0.0311 Epoch 73/100 35/35 [==============================] - 0s 101us/step - loss: 0.0253 Epoch 74/100 35/35 [==============================] - 0s 141us/step - loss: 0.0257 Epoch 75/100 35/35 [==============================] - 0s 103us/step - loss: 0.0248 Epoch 76/100 35/35 [==============================] - 0s 204us/step - loss: 0.0262 Epoch 77/100 35/35 [==============================] - 0s 150us/step - loss: 0.0253 Epoch 78/100 35/35 [==============================] - 0s 158us/step - loss: 0.0248 Epoch 79/100 35/35 [==============================] - 0s 168us/step - loss: 0.0248 Epoch 80/100 35/35 [==============================] - 0s 168us/step - loss: 0.0253 Epoch 81/100 35/35 [==============================] - 0s 153us/step - loss: 0.0253 Epoch 82/100 35/35 [==============================] - 0s 163us/step - loss: 0.0247 Epoch 83/100 35/35 [==============================] - 0s 167us/step - loss: 0.0255 Epoch 84/100 35/35 [==============================] - 0s 160us/step - loss: 0.0282 Epoch 85/100 35/35 [==============================] - 0s 157us/step - loss: 0.0262 Epoch 86/100 35/35 [==============================] - 0s 157us/step - loss: 0.0250 Epoch 87/100 35/35 [==============================] - 0s 307us/step - loss: 0.0302 Epoch 88/100 35/35 [==============================] - 0s 137us/step - loss: 0.0297 Epoch 89/100 35/35 [==============================] - 0s 205us/step - loss: 0.0243 Epoch 90/100 35/35 [==============================] - 0s 128us/step - loss: 0.0310 Epoch 91/100 35/35 [==============================] - 0s 151us/step - loss: 0.0342 Epoch 92/100 35/35 [==============================] - 0s 113us/step - loss: 0.0255 Epoch 93/100 35/35 [==============================] - 0s 105us/step - loss: 0.0315 Epoch 94/100 35/35 [==============================] - 0s 148us/step - loss: 0.0344 Epoch 95/100 35/35 [==============================] - 0s 144us/step - loss: 0.0291 Epoch 96/100 35/35 [==============================] - 0s 140us/step - loss: 0.0252 Epoch 97/100 35/35 [==============================] - 0s 159us/step - loss: 0.0361 Epoch 98/100 35/35 [==============================] - 0s 157us/step - loss: 0.0312 Epoch 99/100 35/35 [==============================] - 0s 140us/step - loss: 0.0253 Epoch 100/100 35/35 [==============================] - 0s 153us/step - loss: 0.0312 . &lt;keras.callbacks.callbacks.History at 0x7fa33275fc18&gt; . def projetar_keras(model, x, y, days_ahead=0, plot=True, model_func=&quot;exponencial&quot;, tipo=&#39;caso&#39;, exibir_pontos=False): title = f&#39;Projeção {model_func} do número de {tipo}s&#39; + f&#39; para os próximos {days_ahead} dias&#39; hoje = date.today() hoje = hoje.strftime(&quot;%d/%m&quot;) x_mean = x.mean() x_std = x.std() y_mean = y.mean() y_std = y.std() n_days = len(x) x_proj = np.arange(n_days+days_ahead).reshape(-1,1) x_prep = (x_proj-x_mean)/x_std y_prep = (y-y_mean)/y_std y_pred = model.predict(x_prep) y_pred = y_pred*y_std + y_mean #Reverse y_pred back y_pred = y_pred.astype(int) y_pred = np.clip(y_pred, 0, None) y_pred = y_pred.squeeze() if plot: fig = plt.figure(figsize=FIGSIZE) plt.plot(x_proj[-days_ahead-1:], y_pred[-days_ahead-1:], &#39;-&#39;, color=&#39;red&#39;, label=&#39;Projeção&#39;) if exibir_pontos: plt.plot(x_proj[:-days_ahead], y_pred[:-days_ahead], &#39;.&#39;, color=&#39;red&#39;, label=f&#39;Função {model_func}&#39;, alpha=0.3) #plt.scatter(x, y, label=&#39;Dados reais&#39;, color=&#39;orange&#39;) plt.plot(y, &#39;-&#39;, label=&#39;Dados reais&#39;) plt.title(title) for x_anot, y_anot in zip(x_proj[-days_ahead:], y_pred[-days_ahead:]): plt.annotate(y_anot, (x_anot, y_anot), ha=&#39;right&#39;, color=&#39;red&#39;) plt.annotate(f&#39;Hoje {hoje}: {y[-1]}&#39;, (x[-1], y[-1]), ha=&#39;right&#39;, color=&#39;black&#39;, textcoords=&quot;offset points&quot;, xytext=(-5,0)) for x_anot, y_anot in zip(x[:-1:2], y[:-1:2]): plt.annotate(y_anot, (x_anot, y_anot), ha=&#39;right&#39;, color=&#39;midnightblue&#39;) plt.grid(color=&#39;black&#39;, linestyle=&#39;--&#39;, linewidth=0.17) plt.legend() plt.xlabel(f&quot;Dias desde o primeiro {tipo}&quot;) plt.ylabel(f&#39;{tipo.capitalize()}s acumulados&#39;) plt.xticks(x_proj[::2]) plt.show() return y_pred, fig . y_pred, fig = projetar_keras(model, x, y, days_ahead=7, exibir_pontos=True) . Por curiosidade, vamos testar ajustar um sigmóide: . #hide_output model = get_keras_model(lr=1, activation=&#39;sigm&#39;) model.fit(x_prep, y_prep, epochs=100) . Epoch 1/100 35/35 [==============================] - 0s 1ms/step - loss: 0.8289 Epoch 2/100 35/35 [==============================] - 0s 83us/step - loss: 0.5795 Epoch 3/100 35/35 [==============================] - 0s 84us/step - loss: 0.5272 Epoch 4/100 35/35 [==============================] - 0s 96us/step - loss: 0.4976 Epoch 5/100 35/35 [==============================] - 0s 254us/step - loss: 0.4893 Epoch 6/100 35/35 [==============================] - 0s 93us/step - loss: 0.4874 Epoch 7/100 35/35 [==============================] - 0s 104us/step - loss: 0.4846 Epoch 8/100 35/35 [==============================] - 0s 100us/step - loss: 0.4800 Epoch 9/100 35/35 [==============================] - 0s 100us/step - loss: 0.4749 Epoch 10/100 35/35 [==============================] - 0s 109us/step - loss: 0.4702 Epoch 11/100 35/35 [==============================] - 0s 102us/step - loss: 0.4663 Epoch 12/100 35/35 [==============================] - 0s 115us/step - loss: 0.4631 Epoch 13/100 35/35 [==============================] - 0s 96us/step - loss: 0.4616 Epoch 14/100 35/35 [==============================] - 0s 103us/step - loss: 0.4609 Epoch 15/100 35/35 [==============================] - 0s 99us/step - loss: 0.4614 Epoch 16/100 35/35 [==============================] - 0s 100us/step - loss: 0.4624 Epoch 17/100 35/35 [==============================] - 0s 92us/step - loss: 0.4634 Epoch 18/100 35/35 [==============================] - 0s 104us/step - loss: 0.4636 Epoch 19/100 35/35 [==============================] - 0s 96us/step - loss: 0.4616 Epoch 20/100 35/35 [==============================] - 0s 100us/step - loss: 0.4594 Epoch 21/100 35/35 [==============================] - 0s 102us/step - loss: 0.4586 Epoch 22/100 35/35 [==============================] - 0s 102us/step - loss: 0.4593 Epoch 23/100 35/35 [==============================] - 0s 100us/step - loss: 0.4601 Epoch 24/100 35/35 [==============================] - 0s 101us/step - loss: 0.4606 Epoch 25/100 35/35 [==============================] - 0s 103us/step - loss: 0.4607 Epoch 26/100 35/35 [==============================] - 0s 104us/step - loss: 0.4592 Epoch 27/100 35/35 [==============================] - 0s 104us/step - loss: 0.4579 Epoch 28/100 35/35 [==============================] - 0s 112us/step - loss: 0.4583 Epoch 29/100 35/35 [==============================] - 0s 93us/step - loss: 0.4592 Epoch 30/100 35/35 [==============================] - 0s 105us/step - loss: 0.4597 Epoch 31/100 35/35 [==============================] - 0s 94us/step - loss: 0.4592 Epoch 32/100 35/35 [==============================] - 0s 106us/step - loss: 0.4582 Epoch 33/100 35/35 [==============================] - 0s 109us/step - loss: 0.4575 Epoch 34/100 35/35 [==============================] - 0s 101us/step - loss: 0.4573 Epoch 35/100 35/35 [==============================] - 0s 112us/step - loss: 0.4574 Epoch 36/100 35/35 [==============================] - 0s 102us/step - loss: 0.4576 Epoch 37/100 35/35 [==============================] - 0s 101us/step - loss: 0.4578 Epoch 38/100 35/35 [==============================] - 0s 112us/step - loss: 0.4576 Epoch 39/100 35/35 [==============================] - 0s 121us/step - loss: 0.4572 Epoch 40/100 35/35 [==============================] - 0s 139us/step - loss: 0.4570 Epoch 41/100 35/35 [==============================] - 0s 136us/step - loss: 0.4570 Epoch 42/100 35/35 [==============================] - 0s 107us/step - loss: 0.4573 Epoch 43/100 35/35 [==============================] - 0s 110us/step - loss: 0.4574 Epoch 44/100 35/35 [==============================] - 0s 121us/step - loss: 0.4574 Epoch 45/100 35/35 [==============================] - 0s 120us/step - loss: 0.4571 Epoch 46/100 35/35 [==============================] - 0s 133us/step - loss: 0.4568 Epoch 47/100 35/35 [==============================] - 0s 125us/step - loss: 0.4566 Epoch 48/100 35/35 [==============================] - 0s 115us/step - loss: 0.4567 Epoch 49/100 35/35 [==============================] - 0s 110us/step - loss: 0.4569 Epoch 50/100 35/35 [==============================] - 0s 95us/step - loss: 0.4570 Epoch 51/100 35/35 [==============================] - 0s 112us/step - loss: 0.4570 Epoch 52/100 35/35 [==============================] - 0s 123us/step - loss: 0.4569 Epoch 53/100 35/35 [==============================] - 0s 119us/step - loss: 0.4567 Epoch 54/100 35/35 [==============================] - 0s 119us/step - loss: 0.4566 Epoch 55/100 35/35 [==============================] - 0s 102us/step - loss: 0.4564 Epoch 56/100 35/35 [==============================] - 0s 102us/step - loss: 0.4563 Epoch 57/100 35/35 [==============================] - 0s 99us/step - loss: 0.4565 Epoch 58/100 35/35 [==============================] - 0s 107us/step - loss: 0.4565 Epoch 59/100 35/35 [==============================] - 0s 107us/step - loss: 0.4564 Epoch 60/100 35/35 [==============================] - 0s 110us/step - loss: 0.4563 Epoch 61/100 35/35 [==============================] - 0s 116us/step - loss: 0.4563 Epoch 62/100 35/35 [==============================] - 0s 122us/step - loss: 0.4562 Epoch 63/100 35/35 [==============================] - 0s 124us/step - loss: 0.4562 Epoch 64/100 35/35 [==============================] - 0s 113us/step - loss: 0.4561 Epoch 65/100 35/35 [==============================] - 0s 95us/step - loss: 0.4561 Epoch 66/100 35/35 [==============================] - 0s 112us/step - loss: 0.4561 Epoch 67/100 35/35 [==============================] - 0s 101us/step - loss: 0.4561 Epoch 68/100 35/35 [==============================] - 0s 111us/step - loss: 0.4561 Epoch 69/100 35/35 [==============================] - 0s 111us/step - loss: 0.4560 Epoch 70/100 35/35 [==============================] - 0s 127us/step - loss: 0.4560 Epoch 71/100 35/35 [==============================] - 0s 128us/step - loss: 0.4560 Epoch 72/100 35/35 [==============================] - 0s 126us/step - loss: 0.4560 Epoch 73/100 35/35 [==============================] - 0s 121us/step - loss: 0.4560 Epoch 74/100 35/35 [==============================] - 0s 110us/step - loss: 0.4560 Epoch 75/100 35/35 [==============================] - 0s 126us/step - loss: 0.4560 Epoch 76/100 35/35 [==============================] - 0s 129us/step - loss: 0.4561 Epoch 77/100 35/35 [==============================] - 0s 110us/step - loss: 0.4561 Epoch 78/100 35/35 [==============================] - 0s 124us/step - loss: 0.4561 Epoch 79/100 35/35 [==============================] - 0s 130us/step - loss: 0.4559 Epoch 80/100 35/35 [==============================] - 0s 108us/step - loss: 0.4558 Epoch 81/100 35/35 [==============================] - 0s 113us/step - loss: 0.4559 Epoch 82/100 35/35 [==============================] - 0s 104us/step - loss: 0.4561 Epoch 83/100 35/35 [==============================] - 0s 113us/step - loss: 0.4561 Epoch 84/100 35/35 [==============================] - 0s 140us/step - loss: 0.4560 Epoch 85/100 35/35 [==============================] - 0s 151us/step - loss: 0.4559 Epoch 86/100 35/35 [==============================] - 0s 101us/step - loss: 0.4558 Epoch 87/100 35/35 [==============================] - 0s 133us/step - loss: 0.4557 Epoch 88/100 35/35 [==============================] - 0s 122us/step - loss: 0.4557 Epoch 89/100 35/35 [==============================] - 0s 132us/step - loss: 0.4557 Epoch 90/100 35/35 [==============================] - 0s 134us/step - loss: 0.4557 Epoch 91/100 35/35 [==============================] - 0s 134us/step - loss: 0.4557 Epoch 92/100 35/35 [==============================] - 0s 153us/step - loss: 0.4556 Epoch 93/100 35/35 [==============================] - 0s 130us/step - loss: 0.4557 Epoch 94/100 35/35 [==============================] - 0s 124us/step - loss: 0.4559 Epoch 95/100 35/35 [==============================] - 0s 122us/step - loss: 0.4558 Epoch 96/100 35/35 [==============================] - 0s 148us/step - loss: 0.4556 Epoch 97/100 35/35 [==============================] - 0s 116us/step - loss: 0.4556 Epoch 98/100 35/35 [==============================] - 0s 123us/step - loss: 0.4557 Epoch 99/100 35/35 [==============================] - 0s 144us/step - loss: 0.4558 Epoch 100/100 35/35 [==============================] - 0s 142us/step - loss: 0.4559 . &lt;keras.callbacks.callbacks.History at 0x7fa332c31cf8&gt; . y_pred, fig = projetar_keras(model, x, y, days_ahead=5, model_func=&#39;sigmóide&#39;, exibir_pontos=True) . Bem distante do esperado :) Vamos testar também o ELU: . #hide_output model = get_keras_model(lr=0.1, activation=&#39;elu&#39;) model.fit(x_prep, y_prep, epochs=100) . Epoch 1/100 35/35 [==============================] - 0s 1ms/step - loss: 0.2591 Epoch 2/100 35/35 [==============================] - 0s 96us/step - loss: 0.1679 Epoch 3/100 35/35 [==============================] - 0s 93us/step - loss: 0.1730 Epoch 4/100 35/35 [==============================] - 0s 94us/step - loss: 0.1734 Epoch 5/100 35/35 [==============================] - 0s 92us/step - loss: 0.1519 Epoch 6/100 35/35 [==============================] - 0s 89us/step - loss: 0.1341 Epoch 7/100 35/35 [==============================] - 0s 89us/step - loss: 0.1172 Epoch 8/100 35/35 [==============================] - 0s 96us/step - loss: 0.0997 Epoch 9/100 35/35 [==============================] - 0s 90us/step - loss: 0.0938 Epoch 10/100 35/35 [==============================] - 0s 91us/step - loss: 0.0956 Epoch 11/100 35/35 [==============================] - 0s 86us/step - loss: 0.0966 Epoch 12/100 35/35 [==============================] - 0s 98us/step - loss: 0.0928 Epoch 13/100 35/35 [==============================] - 0s 88us/step - loss: 0.0849 Epoch 14/100 35/35 [==============================] - 0s 98us/step - loss: 0.0751 Epoch 15/100 35/35 [==============================] - 0s 88us/step - loss: 0.0725 Epoch 16/100 35/35 [==============================] - 0s 91us/step - loss: 0.0726 Epoch 17/100 35/35 [==============================] - 0s 90us/step - loss: 0.0717 Epoch 18/100 35/35 [==============================] - 0s 109us/step - loss: 0.0694 Epoch 19/100 35/35 [==============================] - 0s 108us/step - loss: 0.0668 Epoch 20/100 35/35 [==============================] - 0s 110us/step - loss: 0.0641 Epoch 21/100 35/35 [==============================] - 0s 94us/step - loss: 0.0620 Epoch 22/100 35/35 [==============================] - 0s 96us/step - loss: 0.0609 Epoch 23/100 35/35 [==============================] - 0s 96us/step - loss: 0.0602 Epoch 24/100 35/35 [==============================] - 0s 92us/step - loss: 0.0596 Epoch 25/100 35/35 [==============================] - 0s 88us/step - loss: 0.0594 Epoch 26/100 35/35 [==============================] - 0s 95us/step - loss: 0.0593 Epoch 27/100 35/35 [==============================] - 0s 89us/step - loss: 0.0591 Epoch 28/100 35/35 [==============================] - 0s 89us/step - loss: 0.0587 Epoch 29/100 35/35 [==============================] - 0s 88us/step - loss: 0.0579 Epoch 30/100 35/35 [==============================] - 0s 90us/step - loss: 0.0573 Epoch 31/100 35/35 [==============================] - 0s 90us/step - loss: 0.0569 Epoch 32/100 35/35 [==============================] - 0s 88us/step - loss: 0.0567 Epoch 33/100 35/35 [==============================] - 0s 91us/step - loss: 0.0564 Epoch 34/100 35/35 [==============================] - 0s 93us/step - loss: 0.0563 Epoch 35/100 35/35 [==============================] - 0s 94us/step - loss: 0.0570 Epoch 36/100 35/35 [==============================] - 0s 86us/step - loss: 0.0575 Epoch 37/100 35/35 [==============================] - 0s 99us/step - loss: 0.0575 Epoch 38/100 35/35 [==============================] - 0s 96us/step - loss: 0.0575 Epoch 39/100 35/35 [==============================] - 0s 93us/step - loss: 0.0574 Epoch 40/100 35/35 [==============================] - 0s 92us/step - loss: 0.0572 Epoch 41/100 35/35 [==============================] - 0s 97us/step - loss: 0.0571 Epoch 42/100 35/35 [==============================] - 0s 94us/step - loss: 0.0564 Epoch 43/100 35/35 [==============================] - 0s 97us/step - loss: 0.0555 Epoch 44/100 35/35 [==============================] - 0s 86us/step - loss: 0.0547 Epoch 45/100 35/35 [==============================] - 0s 98us/step - loss: 0.0550 Epoch 46/100 35/35 [==============================] - 0s 93us/step - loss: 0.0548 Epoch 47/100 35/35 [==============================] - 0s 103us/step - loss: 0.0545 Epoch 48/100 35/35 [==============================] - 0s 92us/step - loss: 0.0543 Epoch 49/100 35/35 [==============================] - 0s 110us/step - loss: 0.0542 Epoch 50/100 35/35 [==============================] - 0s 123us/step - loss: 0.0544 Epoch 51/100 35/35 [==============================] - 0s 111us/step - loss: 0.0544 Epoch 52/100 35/35 [==============================] - 0s 94us/step - loss: 0.0545 Epoch 53/100 35/35 [==============================] - 0s 96us/step - loss: 0.0545 Epoch 54/100 35/35 [==============================] - 0s 95us/step - loss: 0.0542 Epoch 55/100 35/35 [==============================] - 0s 98us/step - loss: 0.0542 Epoch 56/100 35/35 [==============================] - 0s 102us/step - loss: 0.0552 Epoch 57/100 35/35 [==============================] - 0s 108us/step - loss: 0.0564 Epoch 58/100 35/35 [==============================] - 0s 121us/step - loss: 0.0574 Epoch 59/100 35/35 [==============================] - 0s 114us/step - loss: 0.0578 Epoch 60/100 35/35 [==============================] - 0s 114us/step - loss: 0.0567 Epoch 61/100 35/35 [==============================] - 0s 106us/step - loss: 0.0549 Epoch 62/100 35/35 [==============================] - 0s 103us/step - loss: 0.0544 Epoch 63/100 35/35 [==============================] - 0s 85us/step - loss: 0.0543 Epoch 64/100 35/35 [==============================] - 0s 90us/step - loss: 0.0542 Epoch 65/100 35/35 [==============================] - 0s 97us/step - loss: 0.0539 Epoch 66/100 35/35 [==============================] - 0s 90us/step - loss: 0.0546 Epoch 67/100 35/35 [==============================] - 0s 88us/step - loss: 0.0557 Epoch 68/100 35/35 [==============================] - 0s 94us/step - loss: 0.0560 Epoch 69/100 35/35 [==============================] - 0s 88us/step - loss: 0.0553 Epoch 70/100 35/35 [==============================] - 0s 100us/step - loss: 0.0544 Epoch 71/100 35/35 [==============================] - 0s 106us/step - loss: 0.0545 Epoch 72/100 35/35 [==============================] - 0s 106us/step - loss: 0.0551 Epoch 73/100 35/35 [==============================] - 0s 103us/step - loss: 0.0549 Epoch 74/100 35/35 [==============================] - 0s 106us/step - loss: 0.0541 Epoch 75/100 35/35 [==============================] - 0s 90us/step - loss: 0.0537 Epoch 76/100 35/35 [==============================] - 0s 97us/step - loss: 0.0536 Epoch 77/100 35/35 [==============================] - 0s 89us/step - loss: 0.0539 Epoch 78/100 35/35 [==============================] - 0s 91us/step - loss: 0.0540 Epoch 79/100 35/35 [==============================] - 0s 85us/step - loss: 0.0538 Epoch 80/100 35/35 [==============================] - 0s 93us/step - loss: 0.0537 Epoch 81/100 35/35 [==============================] - 0s 86us/step - loss: 0.0543 Epoch 82/100 35/35 [==============================] - 0s 97us/step - loss: 0.0561 Epoch 83/100 35/35 [==============================] - 0s 87us/step - loss: 0.0575 Epoch 84/100 35/35 [==============================] - 0s 96us/step - loss: 0.0572 Epoch 85/100 35/35 [==============================] - 0s 92us/step - loss: 0.0558 Epoch 86/100 35/35 [==============================] - 0s 88us/step - loss: 0.0546 Epoch 87/100 35/35 [==============================] - 0s 81us/step - loss: 0.0541 Epoch 88/100 35/35 [==============================] - 0s 92us/step - loss: 0.0538 Epoch 89/100 35/35 [==============================] - 0s 106us/step - loss: 0.0537 Epoch 90/100 35/35 [==============================] - 0s 104us/step - loss: 0.0537 Epoch 91/100 35/35 [==============================] - 0s 94us/step - loss: 0.0537 Epoch 92/100 35/35 [==============================] - 0s 94us/step - loss: 0.0537 Epoch 93/100 35/35 [==============================] - 0s 101us/step - loss: 0.0537 Epoch 94/100 35/35 [==============================] - 0s 90us/step - loss: 0.0538 Epoch 95/100 35/35 [==============================] - 0s 107us/step - loss: 0.0538 Epoch 96/100 35/35 [==============================] - 0s 103us/step - loss: 0.0539 Epoch 97/100 35/35 [==============================] - 0s 101us/step - loss: 0.0539 Epoch 98/100 35/35 [==============================] - 0s 105us/step - loss: 0.0540 Epoch 99/100 35/35 [==============================] - 0s 108us/step - loss: 0.0541 Epoch 100/100 35/35 [==============================] - 0s 140us/step - loss: 0.0542 . &lt;keras.callbacks.callbacks.History at 0x7fa332efdc50&gt; . y_pred, fig = projetar_keras(model, x, y, days_ahead=7, model_func=&quot;ELU (Exp. Linear Unit)&quot;, exibir_pontos=True) . Um pouco melhor, mas neste caso com tendência linear. Vamos também replicar estes dois últimos para o número de óbitos. . # Definir entrada e saida x = np.arange(sum(primeiro_obito_filtro)).reshape(-1,1) y = brasil[primeiro_obito_filtro][&#39;Mortes Cumulativa&#39;].values x_prep, y_prep = preparar_dados(x, y) . #hide_output model = get_keras_model(lr=0.1, activation=&#39;exp&#39;) model.fit(x_prep, y_prep, epochs=100) . Epoch 1/100 15/15 [==============================] - 0s 2ms/step - loss: 0.1040 Epoch 2/100 15/15 [==============================] - 0s 84us/step - loss: 0.0676 Epoch 3/100 15/15 [==============================] - 0s 69us/step - loss: 0.0411 Epoch 4/100 15/15 [==============================] - 0s 69us/step - loss: 0.0255 Epoch 5/100 15/15 [==============================] - 0s 77us/step - loss: 0.0174 Epoch 6/100 15/15 [==============================] - 0s 79us/step - loss: 0.0157 Epoch 7/100 15/15 [==============================] - 0s 75us/step - loss: 0.0169 Epoch 8/100 15/15 [==============================] - 0s 73us/step - loss: 0.0197 Epoch 9/100 15/15 [==============================] - 0s 79us/step - loss: 0.0232 Epoch 10/100 15/15 [==============================] - 0s 69us/step - loss: 0.0259 Epoch 11/100 15/15 [==============================] - 0s 66us/step - loss: 0.0283 Epoch 12/100 15/15 [==============================] - 0s 68us/step - loss: 0.0294 Epoch 13/100 15/15 [==============================] - 0s 75us/step - loss: 0.0297 Epoch 14/100 15/15 [==============================] - 0s 73us/step - loss: 0.0293 Epoch 15/100 15/15 [==============================] - 0s 74us/step - loss: 0.0279 Epoch 16/100 15/15 [==============================] - 0s 69us/step - loss: 0.0261 Epoch 17/100 15/15 [==============================] - 0s 70us/step - loss: 0.0240 Epoch 18/100 15/15 [==============================] - 0s 81us/step - loss: 0.0217 Epoch 19/100 15/15 [==============================] - 0s 70us/step - loss: 0.0197 Epoch 20/100 15/15 [==============================] - 0s 65us/step - loss: 0.0178 Epoch 21/100 15/15 [==============================] - 0s 73us/step - loss: 0.0165 Epoch 22/100 15/15 [==============================] - 0s 77us/step - loss: 0.0157 Epoch 23/100 15/15 [==============================] - 0s 73us/step - loss: 0.0154 Epoch 24/100 15/15 [==============================] - 0s 66us/step - loss: 0.0157 Epoch 25/100 15/15 [==============================] - 0s 66us/step - loss: 0.0164 Epoch 26/100 15/15 [==============================] - 0s 74us/step - loss: 0.0171 Epoch 27/100 15/15 [==============================] - 0s 68us/step - loss: 0.0178 Epoch 28/100 15/15 [==============================] - 0s 77us/step - loss: 0.0183 Epoch 29/100 15/15 [==============================] - 0s 67us/step - loss: 0.0184 Epoch 30/100 15/15 [==============================] - 0s 77us/step - loss: 0.0182 Epoch 31/100 15/15 [==============================] - 0s 77us/step - loss: 0.0177 Epoch 32/100 15/15 [==============================] - 0s 71us/step - loss: 0.0171 Epoch 33/100 15/15 [==============================] - 0s 64us/step - loss: 0.0164 Epoch 34/100 15/15 [==============================] - 0s 73us/step - loss: 0.0159 Epoch 35/100 15/15 [==============================] - 0s 76us/step - loss: 0.0156 Epoch 36/100 15/15 [==============================] - 0s 76us/step - loss: 0.0154 Epoch 37/100 15/15 [==============================] - 0s 74us/step - loss: 0.0155 Epoch 38/100 15/15 [==============================] - 0s 65us/step - loss: 0.0156 Epoch 39/100 15/15 [==============================] - 0s 69us/step - loss: 0.0158 Epoch 40/100 15/15 [==============================] - 0s 81us/step - loss: 0.0160 Epoch 41/100 15/15 [==============================] - 0s 66us/step - loss: 0.0161 Epoch 42/100 15/15 [==============================] - 0s 71us/step - loss: 0.0162 Epoch 43/100 15/15 [==============================] - 0s 73us/step - loss: 0.0162 Epoch 44/100 15/15 [==============================] - 0s 68us/step - loss: 0.0161 Epoch 45/100 15/15 [==============================] - 0s 69us/step - loss: 0.0160 Epoch 46/100 15/15 [==============================] - 0s 73us/step - loss: 0.0158 Epoch 47/100 15/15 [==============================] - 0s 75us/step - loss: 0.0157 Epoch 48/100 15/15 [==============================] - 0s 77us/step - loss: 0.0155 Epoch 49/100 15/15 [==============================] - 0s 74us/step - loss: 0.0155 Epoch 50/100 15/15 [==============================] - 0s 71us/step - loss: 0.0154 Epoch 51/100 15/15 [==============================] - 0s 74us/step - loss: 0.0155 Epoch 52/100 15/15 [==============================] - 0s 71us/step - loss: 0.0155 Epoch 53/100 15/15 [==============================] - 0s 70us/step - loss: 0.0156 Epoch 54/100 15/15 [==============================] - 0s 87us/step - loss: 0.0156 Epoch 55/100 15/15 [==============================] - 0s 70us/step - loss: 0.0156 Epoch 56/100 15/15 [==============================] - 0s 94us/step - loss: 0.0156 Epoch 57/100 15/15 [==============================] - 0s 71us/step - loss: 0.0156 Epoch 58/100 15/15 [==============================] - 0s 68us/step - loss: 0.0156 Epoch 59/100 15/15 [==============================] - 0s 66us/step - loss: 0.0155 Epoch 60/100 15/15 [==============================] - 0s 65us/step - loss: 0.0155 Epoch 61/100 15/15 [==============================] - 0s 75us/step - loss: 0.0154 Epoch 62/100 15/15 [==============================] - 0s 72us/step - loss: 0.0154 Epoch 63/100 15/15 [==============================] - 0s 75us/step - loss: 0.0154 Epoch 64/100 15/15 [==============================] - 0s 73us/step - loss: 0.0155 Epoch 65/100 15/15 [==============================] - 0s 77us/step - loss: 0.0155 Epoch 66/100 15/15 [==============================] - 0s 69us/step - loss: 0.0155 Epoch 67/100 15/15 [==============================] - 0s 68us/step - loss: 0.0155 Epoch 68/100 15/15 [==============================] - 0s 71us/step - loss: 0.0155 Epoch 69/100 15/15 [==============================] - 0s 75us/step - loss: 0.0155 Epoch 70/100 15/15 [==============================] - 0s 78us/step - loss: 0.0155 Epoch 71/100 15/15 [==============================] - 0s 76us/step - loss: 0.0155 Epoch 72/100 15/15 [==============================] - 0s 69us/step - loss: 0.0154 Epoch 73/100 15/15 [==============================] - 0s 75us/step - loss: 0.0154 Epoch 74/100 15/15 [==============================] - 0s 69us/step - loss: 0.0154 Epoch 75/100 15/15 [==============================] - 0s 67us/step - loss: 0.0154 Epoch 76/100 15/15 [==============================] - 0s 68us/step - loss: 0.0154 Epoch 77/100 15/15 [==============================] - 0s 79us/step - loss: 0.0154 Epoch 78/100 15/15 [==============================] - 0s 78us/step - loss: 0.0154 Epoch 79/100 15/15 [==============================] - 0s 70us/step - loss: 0.0155 Epoch 80/100 15/15 [==============================] - 0s 73us/step - loss: 0.0154 Epoch 81/100 15/15 [==============================] - 0s 68us/step - loss: 0.0154 Epoch 82/100 15/15 [==============================] - 0s 70us/step - loss: 0.0154 Epoch 83/100 15/15 [==============================] - 0s 78us/step - loss: 0.0154 Epoch 84/100 15/15 [==============================] - 0s 67us/step - loss: 0.0154 Epoch 85/100 15/15 [==============================] - 0s 74us/step - loss: 0.0154 Epoch 86/100 15/15 [==============================] - 0s 73us/step - loss: 0.0154 Epoch 87/100 15/15 [==============================] - 0s 67us/step - loss: 0.0154 Epoch 88/100 15/15 [==============================] - 0s 71us/step - loss: 0.0154 Epoch 89/100 15/15 [==============================] - 0s 78us/step - loss: 0.0154 Epoch 90/100 15/15 [==============================] - 0s 69us/step - loss: 0.0154 Epoch 91/100 15/15 [==============================] - 0s 69us/step - loss: 0.0154 Epoch 92/100 15/15 [==============================] - 0s 72us/step - loss: 0.0154 Epoch 93/100 15/15 [==============================] - 0s 74us/step - loss: 0.0154 Epoch 94/100 15/15 [==============================] - 0s 73us/step - loss: 0.0154 Epoch 95/100 15/15 [==============================] - 0s 74us/step - loss: 0.0154 Epoch 96/100 15/15 [==============================] - 0s 72us/step - loss: 0.0154 Epoch 97/100 15/15 [==============================] - 0s 80us/step - loss: 0.0154 Epoch 98/100 15/15 [==============================] - 0s 74us/step - loss: 0.0154 Epoch 99/100 15/15 [==============================] - 0s 72us/step - loss: 0.0154 Epoch 100/100 15/15 [==============================] - 0s 116us/step - loss: 0.0154 . &lt;keras.callbacks.callbacks.History at 0x7fa332d0e898&gt; . y_pred, fig = projetar_keras(model, x, y, days_ahead=7, model_func=&quot;exponencial&quot;, tipo=&#39;obito&#39;, exibir_pontos=True) . #hide_output model = get_keras_model(lr=0.1, activation=&#39;elu&#39;) model.fit(x_prep, y_prep, epochs=100) . Epoch 1/100 15/15 [==============================] - 0s 2ms/step - loss: 0.2033 Epoch 2/100 15/15 [==============================] - 0s 90us/step - loss: 0.1654 Epoch 3/100 15/15 [==============================] - 0s 73us/step - loss: 0.1279 Epoch 4/100 15/15 [==============================] - 0s 84us/step - loss: 0.0983 Epoch 5/100 15/15 [==============================] - 0s 75us/step - loss: 0.0728 Epoch 6/100 15/15 [==============================] - 0s 75us/step - loss: 0.0524 Epoch 7/100 15/15 [==============================] - 0s 72us/step - loss: 0.0370 Epoch 8/100 15/15 [==============================] - 0s 75us/step - loss: 0.0261 Epoch 9/100 15/15 [==============================] - 0s 77us/step - loss: 0.0189 Epoch 10/100 15/15 [==============================] - 0s 80us/step - loss: 0.0144 Epoch 11/100 15/15 [==============================] - 0s 80us/step - loss: 0.0119 Epoch 12/100 15/15 [==============================] - 0s 80us/step - loss: 0.0108 Epoch 13/100 15/15 [==============================] - 0s 63us/step - loss: 0.0108 Epoch 14/100 15/15 [==============================] - 0s 84us/step - loss: 0.0115 Epoch 15/100 15/15 [==============================] - 0s 83us/step - loss: 0.0126 Epoch 16/100 15/15 [==============================] - 0s 75us/step - loss: 0.0139 Epoch 17/100 15/15 [==============================] - 0s 85us/step - loss: 0.0152 Epoch 18/100 15/15 [==============================] - 0s 94us/step - loss: 0.0164 Epoch 19/100 15/15 [==============================] - 0s 76us/step - loss: 0.0176 Epoch 20/100 15/15 [==============================] - 0s 103us/step - loss: 0.0186 Epoch 21/100 15/15 [==============================] - 0s 101us/step - loss: 0.0194 Epoch 22/100 15/15 [==============================] - 0s 93us/step - loss: 0.0200 Epoch 23/100 15/15 [==============================] - 0s 106us/step - loss: 0.0203 Epoch 24/100 15/15 [==============================] - 0s 114us/step - loss: 0.0204 Epoch 25/100 15/15 [==============================] - 0s 83us/step - loss: 0.0203 Epoch 26/100 15/15 [==============================] - 0s 119us/step - loss: 0.0201 Epoch 27/100 15/15 [==============================] - 0s 64us/step - loss: 0.0197 Epoch 28/100 15/15 [==============================] - 0s 66us/step - loss: 0.0191 Epoch 29/100 15/15 [==============================] - 0s 85us/step - loss: 0.0184 Epoch 30/100 15/15 [==============================] - 0s 157us/step - loss: 0.0176 Epoch 31/100 15/15 [==============================] - 0s 65us/step - loss: 0.0168 Epoch 32/100 15/15 [==============================] - 0s 67us/step - loss: 0.0160 Epoch 33/100 15/15 [==============================] - 0s 68us/step - loss: 0.0152 Epoch 34/100 15/15 [==============================] - 0s 73us/step - loss: 0.0144 Epoch 35/100 15/15 [==============================] - 0s 78us/step - loss: 0.0136 Epoch 36/100 15/15 [==============================] - 0s 64us/step - loss: 0.0129 Epoch 37/100 15/15 [==============================] - 0s 86us/step - loss: 0.0123 Epoch 38/100 15/15 [==============================] - 0s 82us/step - loss: 0.0118 Epoch 39/100 15/15 [==============================] - 0s 85us/step - loss: 0.0114 Epoch 40/100 15/15 [==============================] - 0s 117us/step - loss: 0.0111 Epoch 41/100 15/15 [==============================] - 0s 118us/step - loss: 0.0109 Epoch 42/100 15/15 [==============================] - 0s 134us/step - loss: 0.0107 Epoch 43/100 15/15 [==============================] - 0s 264us/step - loss: 0.0107 Epoch 44/100 15/15 [==============================] - 0s 75us/step - loss: 0.0107 Epoch 45/100 15/15 [==============================] - 0s 100us/step - loss: 0.0107 Epoch 46/100 15/15 [==============================] - 0s 83us/step - loss: 0.0108 Epoch 47/100 15/15 [==============================] - 0s 76us/step - loss: 0.0110 Epoch 48/100 15/15 [==============================] - 0s 75us/step - loss: 0.0111 Epoch 49/100 15/15 [==============================] - 0s 81us/step - loss: 0.0112 Epoch 50/100 15/15 [==============================] - 0s 77us/step - loss: 0.0112 Epoch 51/100 15/15 [==============================] - 0s 91us/step - loss: 0.0113 Epoch 52/100 15/15 [==============================] - 0s 84us/step - loss: 0.0113 Epoch 53/100 15/15 [==============================] - 0s 88us/step - loss: 0.0113 Epoch 54/100 15/15 [==============================] - 0s 79us/step - loss: 0.0113 Epoch 55/100 15/15 [==============================] - 0s 80us/step - loss: 0.0112 Epoch 56/100 15/15 [==============================] - 0s 86us/step - loss: 0.0112 Epoch 57/100 15/15 [==============================] - 0s 92us/step - loss: 0.0111 Epoch 58/100 15/15 [==============================] - 0s 72us/step - loss: 0.0110 Epoch 59/100 15/15 [==============================] - 0s 68us/step - loss: 0.0109 Epoch 60/100 15/15 [==============================] - 0s 86us/step - loss: 0.0109 Epoch 61/100 15/15 [==============================] - 0s 89us/step - loss: 0.0108 Epoch 62/100 15/15 [==============================] - 0s 107us/step - loss: 0.0108 Epoch 63/100 15/15 [==============================] - 0s 87us/step - loss: 0.0107 Epoch 64/100 15/15 [==============================] - 0s 88us/step - loss: 0.0107 Epoch 65/100 15/15 [==============================] - 0s 72us/step - loss: 0.0107 Epoch 66/100 15/15 [==============================] - 0s 77us/step - loss: 0.0107 Epoch 67/100 15/15 [==============================] - 0s 86us/step - loss: 0.0107 Epoch 68/100 15/15 [==============================] - 0s 90us/step - loss: 0.0107 Epoch 69/100 15/15 [==============================] - 0s 82us/step - loss: 0.0107 Epoch 70/100 15/15 [==============================] - 0s 87us/step - loss: 0.0107 Epoch 71/100 15/15 [==============================] - 0s 95us/step - loss: 0.0107 Epoch 72/100 15/15 [==============================] - 0s 79us/step - loss: 0.0107 Epoch 73/100 15/15 [==============================] - 0s 85us/step - loss: 0.0107 Epoch 74/100 15/15 [==============================] - 0s 80us/step - loss: 0.0107 Epoch 75/100 15/15 [==============================] - 0s 78us/step - loss: 0.0107 Epoch 76/100 15/15 [==============================] - 0s 108us/step - loss: 0.0107 Epoch 77/100 15/15 [==============================] - 0s 128us/step - loss: 0.0107 Epoch 78/100 15/15 [==============================] - 0s 86us/step - loss: 0.0107 Epoch 79/100 15/15 [==============================] - 0s 75us/step - loss: 0.0107 Epoch 80/100 15/15 [==============================] - 0s 87us/step - loss: 0.0107 Epoch 81/100 15/15 [==============================] - 0s 87us/step - loss: 0.0107 Epoch 82/100 15/15 [==============================] - 0s 108us/step - loss: 0.0107 Epoch 83/100 15/15 [==============================] - 0s 67us/step - loss: 0.0107 Epoch 84/100 15/15 [==============================] - 0s 83us/step - loss: 0.0107 Epoch 85/100 15/15 [==============================] - 0s 121us/step - loss: 0.0107 Epoch 86/100 15/15 [==============================] - 0s 78us/step - loss: 0.0107 Epoch 87/100 15/15 [==============================] - 0s 77us/step - loss: 0.0107 Epoch 88/100 15/15 [==============================] - 0s 93us/step - loss: 0.0107 Epoch 89/100 15/15 [==============================] - 0s 73us/step - loss: 0.0107 Epoch 90/100 15/15 [==============================] - 0s 88us/step - loss: 0.0107 Epoch 91/100 15/15 [==============================] - 0s 85us/step - loss: 0.0107 Epoch 92/100 15/15 [==============================] - 0s 66us/step - loss: 0.0107 Epoch 93/100 15/15 [==============================] - 0s 78us/step - loss: 0.0107 Epoch 94/100 15/15 [==============================] - 0s 85us/step - loss: 0.0107 Epoch 95/100 15/15 [==============================] - 0s 90us/step - loss: 0.0107 Epoch 96/100 15/15 [==============================] - 0s 77us/step - loss: 0.0107 Epoch 97/100 15/15 [==============================] - 0s 85us/step - loss: 0.0107 Epoch 98/100 15/15 [==============================] - 0s 173us/step - loss: 0.0107 Epoch 99/100 15/15 [==============================] - 0s 98us/step - loss: 0.0107 Epoch 100/100 15/15 [==============================] - 0s 130us/step - loss: 0.0107 . &lt;keras.callbacks.callbacks.History at 0x7fa332d0e860&gt; . y_pred, fig = projetar_keras(model, x, y, days_ahead=7, model_func=&quot;ELU (Exp. Linear Unit)&quot;, tipo=&#39;obito&#39;, exibir_pontos=True) .",
            "url": "https://covid19graficos.github.io/relatorio/coronavirus/2020/04/01/projecao-brasil.html",
            "relUrl": "/coronavirus/2020/04/01/projecao-brasil.html",
            "date": " • Apr 1, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Coronavirus Brasil vs Mundo - Gráficos Interativos",
            "content": "Fonte: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv . Gráficos de contaminação . . . . . . . . . Contaminação Relativa . . . . . Mortes . . . . . . . . . Letalidade . . .",
            "url": "https://covid19graficos.github.io/relatorio/coronavirus/2020/04/01/corona-mundo-interativo.html",
            "relUrl": "/coronavirus/2020/04/01/corona-mundo-interativo.html",
            "date": " • Apr 1, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Coronavirus Brasil vs Mundo - Gráficos Estáticos",
            "content": "Fonte: https://opendata.ecdc.europa.eu/covid19/casedistribution/csv . Gráficos de contaminação . Contaminação Relativa . Mortes . Letalidade .",
            "url": "https://covid19graficos.github.io/relatorio/coronavirus/2020/04/01/corona-mundo-estatico.html",
            "relUrl": "/coronavirus/2020/04/01/corona-mundo-estatico.html",
            "date": " • Apr 1, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Coronavirus Brasil - Gráficos estáticos",
            "content": "Gráficos de contaminação . Curvas de contaminação por regiões . Tabela das 200 cidades com mais casos . Estado Cidade Casos Mortes Data . date . 2020-03-31 SP | São Paulo | 1885 | 121.0 | 2020-03-31 | . 2020-03-31 CE | Fortaleza | 371 | 6.0 | 2020-03-31 | . 2020-03-31 DF | Brasília | 333 | 3.0 | 2020-03-31 | . 2020-03-31 RS | Porto Alegre | 190 | 2.0 | 2020-03-31 | . 2020-03-31 MG | Belo Horizonte | 163 | 2.0 | 2020-03-31 | . 2020-03-31 AM | Manaus | 159 | 2.0 | 2020-03-31 | . 2020-03-31 BA | Salvador | 132 | 2.0 | 2020-03-31 | . 2020-03-31 PR | Curitiba | 87 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Florianópolis | 58 | 0.0 | 2020-03-31 | . 2020-03-31 PE | Recife | 57 | 4.0 | 2020-03-31 | . 2020-03-31 SP | Importados/Indefinidos | 53 | 1.0 | 2020-03-31 | . 2020-03-31 MA | São Luís | 51 | 1.0 | 2020-03-31 | . 2020-03-31 SP | Santo André | 48 | 1.0 | 2020-03-31 | . 2020-03-31 SP | São Bernardo do Campo | 44 | 1.0 | 2020-03-31 | . 2020-03-31 RN | Natal | 42 | 0.0 | 2020-03-31 | . 2020-03-31 GO | Goiânia | 39 | 0.0 | 2020-03-31 | . 2020-03-31 MS | Campo Grande | 37 | 0.0 | 2020-03-31 | . 2020-03-31 ES | Vila Velha | 35 | 0.0 | 2020-03-31 | . 2020-03-31 AC | Rio Branco | 34 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Osasco | 33 | 2.0 | 2020-03-31 | . 2020-03-31 SP | São Caetano do Sul | 30 | 1.0 | 2020-03-31 | . 2020-03-31 ES | Vitória | 28 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Juiz de Fora | 23 | 0.0 | 2020-03-31 | . 2020-03-31 PA | Belém | 21 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Guarulhos | 21 | 2.0 | 2020-03-31 | . 2020-03-31 MG | Nova Lima | 20 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Barueri | 20 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Blumenau | 19 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Itajaí | 18 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Feira de Santana | 18 | 0.0 | 2020-03-31 | . 2020-03-31 MT | Cuiabá | 18 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Criciúma | 17 | 0.0 | 2020-03-31 | . 2020-03-31 RN | Mossoró | 17 | 1.0 | 2020-03-31 | . 2020-03-31 SP | Santana de Parnaíba | 17 | 0.0 | 2020-03-31 | . 2020-03-31 PI | Teresina | 16 | 2.0 | 2020-03-31 | . 2020-03-31 SE | Aracaju | 16 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Campinas | 15 | 1.0 | 2020-03-31 | . 2020-03-31 RS | Bagé | 15 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Joinville | 14 | 1.0 | 2020-03-31 | . 2020-03-31 ES | Serra | 14 | 0.0 | 2020-03-31 | . 2020-03-31 CE | Aquiraz | 14 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Santos | 14 | 0.0 | 2020-03-31 | . 2020-03-31 RR | Boa Vista | 13 | 0.0 | 2020-03-31 | . 2020-03-31 PB | João Pessoa | 13 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Caxias do Sul | 13 | 0.0 | 2020-03-31 | . 2020-03-31 AL | Maceió | 13 | 1.0 | 2020-03-31 | . 2020-03-31 BA | Lauro de Freitas | 12 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Braço do Norte | 12 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Cotia | 12 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Taboão da Serra | 12 | 1.0 | 2020-03-31 | . 2020-03-31 BA | Porto Seguro | 10 | 0.0 | 2020-03-31 | . 2020-03-31 RN | Parnamirim | 10 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Uberlândia | 10 | 0.0 | 2020-03-31 | . 2020-03-31 SC | São José | 10 | 1.0 | 2020-03-31 | . 2020-03-31 PR | Foz do Iguaçu | 10 | 0.0 | 2020-03-31 | . 2020-03-31 AP | Macapá | 10 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Mogi das Cruzes | 10 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Cascavel | 10 | 1.0 | 2020-03-31 | . 2020-03-31 MG | Divinópolis | 9 | 0.0 | 2020-03-31 | . 2020-03-31 TO | Palmas | 9 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Londrina | 9 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Maringá | 9 | 2.0 | 2020-03-31 | . 2020-03-31 SC | Balneário Camboriú | 9 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Tubarão | 9 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Caieiras | 9 | 1.0 | 2020-03-31 | . 2020-03-31 SP | São José dos Campos | 9 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Canoas | 8 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Importados/Indefinidos | 8 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Cianorte | 7 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Camboriú | 7 | 0.0 | 2020-03-31 | . 2020-03-31 GO | Rio Verde | 7 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Embu das Artes | 7 | 1.0 | 2020-03-31 | . 2020-03-31 RS | Torres | 7 | 0.0 | 2020-03-31 | . 2020-03-31 AC | Acrelândia | 7 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Importados/Indefinidos | 6 | 0.0 | 2020-03-31 | . 2020-03-31 PA | Ananindeua | 6 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Carapicuíba | 6 | 0.0 | 2020-03-31 | . 2020-03-31 SP | São José do Rio Preto | 6 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Itapevi | 6 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Ribeirão Preto | 6 | 1.0 | 2020-03-31 | . 2020-03-31 RO | Porto Velho | 6 | 1.0 | 2020-03-31 | . 2020-03-31 PE | Jaboatão dos Guararapes | 6 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Ilhéus | 6 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Imbituba | 5 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Ferraz de Vasconcelos | 5 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Importados/Indefinidos | 5 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Betim | 5 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Diadema | 5 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Contagem | 5 | 0.0 | 2020-03-31 | . 2020-03-31 PE | Olinda | 5 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Chapecó | 5 | 0.0 | 2020-03-31 | . 2020-03-31 PE | Importados/Indefinidos | 5 | 1.0 | 2020-03-31 | . 2020-03-31 CE | Sobral | 5 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Lajeado | 5 | 0.0 | 2020-03-31 | . 2020-03-31 ES | Cariacica | 5 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Piracicaba | 5 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Pinhais | 4 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Brumado | 4 | 0.0 | 2020-03-31 | . 2020-03-31 AM | Manacapuru | 4 | 0.0 | 2020-03-31 | . 2020-03-31 AM | Itacoatiara | 4 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Sant&#39;Ana do Livramento | 4 | 0.0 | 2020-03-31 | . 2020-03-31 MT | Rondonópolis | 4 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Itabuna | 4 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Porto Belo | 4 | 0.0 | 2020-03-31 | . 2020-03-31 GO | Anápolis | 4 | 0.0 | 2020-03-31 | . 2020-03-31 ES | Linhares | 4 | 0.0 | 2020-03-31 | . 2020-03-31 RS | São Leopoldo | 4 | 0.0 | 2020-03-31 | . 2020-03-31 AL | Importados/Indefinidos | 4 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Itajuípe | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Mauá | 3 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Serafina Corrêa | 3 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Ivoti | 3 | 1.0 | 2020-03-31 | . 2020-03-31 SP | Jundiaí | 3 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Erechim | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Itapecerica da Serra | 3 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Alagoinhas | 3 | 0.0 | 2020-03-31 | . 2020-03-31 AM | Parintins | 3 | 1.0 | 2020-03-31 | . 2020-03-31 SC | Brusque | 3 | 0.0 | 2020-03-31 | . 2020-03-31 PR | São José dos Pinhais | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Gravatal | 3 | 0.0 | 2020-03-31 | . 2020-03-31 PE | São Lourenço da Mata | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Franco da Rocha | 3 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Campo Largo | 3 | 0.0 | 2020-03-31 | . 2020-03-31 RR | Bonfim | 3 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Prado | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Jaraguá do Sul | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Navegantes | 3 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Ponta Grossa | 3 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Campo Mourão | 3 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Uberaba | 3 | 0.0 | 2020-03-31 | . 2020-03-31 MS | Batayporã | 3 | 1.0 | 2020-03-31 | . 2020-03-31 GO | Valparaíso de Goiás | 3 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Sabará | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Sorocaba | 3 | 1.0 | 2020-03-31 | . 2020-03-31 TO | Araguaína | 3 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Vargem Grande Paulista | 2 | 1.0 | 2020-03-31 | . 2020-03-31 GO | Itumbiara | 2 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Camaçari | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Guaíra | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Gaspar | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Governador Valadares | 2 | 0.0 | 2020-03-31 | . 2020-03-31 ES | Guarapari | 2 | 0.0 | 2020-03-31 | . 2020-03-31 GO | Jataí | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Arujá | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Santa Maria | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Capão da Canoa | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Americana | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SE | Propriá | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MS | Nova Andradina | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Paranavaí | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Campo Bom | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Mariana | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Pato Branco | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Bento Gonçalves | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Anta Gorda | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Alvorada | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SP | São Sebastião | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Telêmaco Borba | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Umuarama | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Siderópolis | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Rancho Queimado | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Itapema | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RN | Importados/Indefinidos | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Jaguaruna | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Papanduva | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PR | Almirante Tamandaré | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Lagoa da Prata | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Novo Hamburgo | 2 | 1.0 | 2020-03-31 | . 2020-03-31 PB | Campina Grande | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Sete Lagoas | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PE | Camaragibe | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Pelotas | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PE | Fernando de Noronha | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Mairiporã | 2 | 0.0 | 2020-03-31 | . 2020-03-31 GO | Aparecida de Goiânia | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MG | Poços de Caldas | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MT | Várzea Grande | 2 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Juazeiro | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MG | São João del Rei | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Estância Velha | 2 | 0.0 | 2020-03-31 | . 2020-03-31 PE | Petrolina | 2 | 0.0 | 2020-03-31 | . 2020-03-31 CE | Quixadá | 2 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Rio Grande | 2 | 0.0 | 2020-03-31 | . 2020-03-31 MS | Dourados | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Jandira | 2 | 0.0 | 2020-03-31 | . 2020-03-31 SP | São Vicente | 1 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Sapiranga | 1 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Santo Antônio da Patrulha | 1 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Antônio Carlos | 1 | 0.0 | 2020-03-31 | . 2020-03-31 SP | São Pedro | 1 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Indaial | 1 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Santiago | 1 | 0.0 | 2020-03-31 | . 2020-03-31 SC | Içara | 1 | 0.0 | 2020-03-31 | . 2020-03-31 RS | Santa Rosa | 1 | 0.0 | 2020-03-31 | . 2020-03-31 AL | Porto Real do Colégio | 1 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Dias d&#39;Ávila | 1 | 0.0 | 2020-03-31 | . 2020-03-31 RS | São Domingos do Sul | 1 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Tatuí | 1 | 0.0 | 2020-03-31 | . 2020-03-31 BA | Itagibá | 1 | 0.0 | 2020-03-31 | . 2020-03-31 SP | Vinhedo | 1 | 0.0 | 2020-03-31 | .",
            "url": "https://covid19graficos.github.io/relatorio/coronavirus/2020/04/01/corona-brasil-estatico.html",
            "relUrl": "/coronavirus/2020/04/01/corona-brasil-estatico.html",
            "date": " • Apr 1, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Sobre este website . Este website foi criado utilizando fastpages no qual permite a conversão automática de arquivos do Jupyter notebook em páginas da web. Temos o objetivo de tornar análises comparativas do Brasil com o resto do mundo de maneira à melhor informar a população. Sugestões de relatórios podem ser submetidas em nosso repositório. . Desenvolvedores . Vinicius Bastos Gomes Linkedin: https://www.linkedin.com/in/vinicius-gomes-phd-490557163/ | Github: https://github.com/ViniciusBG | . | Fernando Marcos Wittmann LinkedIn: https://www.linkedin.com/in/fernandowittmann/ | GitHub: https://github.com/WittmannF | . | . Fontes . John Hopkins University: https://github.com/CSSEGISandData/COVID-19 | Brasil.io: https://brasil.io/dataset/covid19/boletim | Ministério da Saúde: https://covid.saude.gov.br/ | . As fontes de cada relatório podem também ser conferidas em nossos notebooks. .",
          "url": "https://covid19graficos.github.io/relatorio/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}